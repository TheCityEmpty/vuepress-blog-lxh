(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{419:function(t,s,e){"use strict";e.r(s);var a=e(28),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"学习-ts-四-es6中的类和typescript中的类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习-ts-四-es6中的类和typescript中的类"}},[t._v("#")]),t._v(" 学习 ts 四： ES6中的类和TypeScript中的类")]),t._v(" "),e("h2",{attrs:{id:"es5中的类是怎么实现的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es5中的类是怎么实现的"}},[t._v("#")]),t._v(" ES5中的类是怎么实现的？")]),t._v(" "),e("p",[t._v("在传统的面向对象编程语言（比如java,c++）中都有 “类” 的概念。在 "),e("code",[t._v("ES5")]),t._v(" 中并没有相应的关键字来生成一个类。但是却可以通过构造函数和原型链来模拟一个“类” 的概念。将方法名的首字符设置为大写，则认为这个函数是个类。")])])}),[],!1,null,null,null);s.default=r.exports}}]);